{"version":3,"sources":["webpack:///./includes/assets/js/modules/DpitColorAnalyze.js","webpack:///./includes/assets/js/modules/DpitColorWithHslFeatures.js","webpack:///./includes/assets/js/modules/AdminThemeColors.js","webpack:///./includes/assets/js/modules/DpitColor.js"],"names":["DpitColorAnalyze","constructor","config","dpDebugEn","console","log","srcColor","preferWhiteText","arguments","length","undefined","colorRangeArray","fallBackContrastThreshold","fallbackColor","contrasts","srcColorObj","DpitColor","forEach","color","colorObj","push","contrast","sort","a","b","fallbackColorObj","dpitColors","rgbIdx","res","Array","isArray","Error","colorToMixIn","dpitColorsToSort","compareColorsByRgbHue","_defineProperty","red","green","blue","rgbKey","fromRgb","Math","min","max","getRgbHueFeature","DpitColorWithHslFeatures","lightness","r","this","rgbObj","g","toHslObj","h","s","l","d","hslObj","hueToRgb","p","q","t","round","setLightness","lightnessVal","fromHslObj","AdminThemeColors","_config$adminColors","_config$adminColors$c","_config$adminColors$c2","adminColors","colors","legacy","legacyColors","adminColorsObj","i","colorIdx","adminColor","setAsCssVariable","concat","getContrastColor","actual","Object","keys","key","addRgbVars","getMostColor","rgbFeatureThresh","rgbDefaults","index","indexOf","splice","src","startsWith","hexStringToRgbObj","rgbStringToRgbObj","colorDefinition","toRgbStringCommaSeparated","rgbString","match","parseInt","hex","replace","m","result","exec","color2","lum1","luminosity","lum2","lum","chan","pow","isDark","isLight","mix","weight","color1","w1","w2","varName","document","documentElement","style","setProperty"],"mappings":"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","file":"main/AdminThemeColors-8e0d2c3e.js","sourcesContent":["\r\nimport DpitColor from './DpitColor';\r\nexport default class DpitColorAnalyze {\r\n\tconstructor(config) {\r\n\t\tif (config.dpDebugEn) console.log('[dpit] INIT DpitColorAnalyze');\r\n\t}\r\n\t// contrast range: 1 - 21\r\n\tstatic getContrastColor(srcColor, preferWhiteText = true, colorRangeArray = ['#fff', '#252525'], fallBackContrastThreshold = 3, fallbackColor = '#222') {\r\n\t\tconst contrasts = [];\r\n\t\tconst srcColorObj = new DpitColor(srcColor);\r\n\t\tcolorRangeArray.forEach((color) => {\r\n\t\t\tconst colorObj = new DpitColor(color);\r\n\t\t\tcontrasts.push({\r\n\t\t\t\tcolor: colorObj,\r\n\t\t\t\tcontrast: srcColorObj.contrast(colorObj)\r\n\t\t\t});\r\n\t\t});\r\n\t\tif (contrasts.length) {\r\n\t\t\tif (preferWhiteText) contrasts[0].contrast *= 3.2;\r\n\t\t\telse contrasts[0].contrast *= 1.5;\r\n\t\t\tcontrasts.sort((a, b) => b.contrast - a.contrast);\r\n\t\t\t//console.log(contrasts.map((element) => element.contrast));\r\n\t\t\tif (contrasts[0].contrast < fallBackContrastThreshold) {\r\n\t\t\t\tconst fallbackColorObj = new DpitColor(fallbackColor);\r\n\t\t\t\tcontrasts.push({\r\n\t\t\t\t\tcolor: fallbackColorObj,\r\n\t\t\t\t\tcontrast: srcColorObj.contrast(fallbackColorObj)\r\n\t\t\t\t});\r\n\t\t\t\tcontrasts.sort((a, b) => b.contrast - a.contrast);\r\n\t\t\t}\r\n\t\t\treturn contrasts[0].color;\r\n\t\t}\r\n\t\treturn colorRangeArray && colorRangeArray[0]\r\n\t\t\t? new DpitColor(colorRangeArray[0])\r\n\t\t\t: new DpitColor(fallbackColor);\r\n\t}\r\n\r\n\tstatic getMostColor(dpitColors, rgbIdx /*r = red*, g = green, b = blue*/) {\r\n\t\tlet res = null;\r\n\t\tif (!Array.isArray(dpitColors)) {\r\n\t\t\tthrow new Error('Argument \"mixinColor\" isn\\'t a DpitColor instance, but rather an instance of ' + typeof colorToMixIn);\r\n\t\t}\r\n\t\tconst dpitColorsToSort = [...dpitColors];\r\n\t\tdpitColorsToSort.sort((a, b) => DpitColorAnalyze.compareColorsByRgbHue(rgbIdx, a, b));\r\n\t\tres = dpitColorsToSort[0];\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic getRgbHueFeature = (rgbIdx, color) => {\r\n\t\tswitch (rgbIdx) {\r\n\t\t\tcase 'r': return color.red() + (color.red() - color.green()) + (color.red() - color.blue());\r\n\t\t\tcase 'g': return color.green() + (color.green() - color.red()) + (color.green() - color.blue());\r\n\t\t\tcase 'b': return color.blue() + (color.blue() - color.red()) + (color.blue() - color.green());\r\n\t\t}\r\n\t};\r\n\r\n\tstatic getRgbHueAdjustedColor = (rgbKey, color) => {\r\n\t\tconst addVal = 100;\r\n\t\tswitch (rgbKey) {\r\n\t\t\tcase 'r': return DpitColor.fromRgb(Math.min(color.red() + addVal, 255), Math.max(color.green() - addVal, 0), Math.max(color.blue() - addVal, 0));\r\n\t\t\tcase 'g': return DpitColor.fromRgb(Math.max(color.red() - addVal, 0), Math.min(color.green() + addVal, 255), Math.max(color.blue() - addVal, 0));\r\n\t\t\tcase 'b': return DpitColor.fromRgb(Math.max(color.red() - addVal, 0), Math.max(color.green() - addVal, 0), Math.min(color.blue() + addVal, 255));\r\n\t\t}\r\n\t};\r\n\r\n\tstatic compareColorsByRgbHue = (rgbKey, a, b) => {\r\n\t\treturn DpitColorAnalyze.getRgbHueFeature(rgbKey, b) - DpitColorAnalyze.getRgbHueFeature(rgbKey, a);\r\n\t};\r\n}","import DpitColor from './DpitColor';\r\n\r\nexport default class DpitColorWithHslFeatures extends DpitColor {\r\n\tlightness() {\r\n\r\n\t\tconst r = this.rgbObj.r / 255;\r\n\t\tconst g = this.rgbObj.g / 255;\r\n\t\tconst b = this.rgbObj.b / 255;\r\n\r\n\t\tconst max = Math.max(r, g, b);\r\n\t\tconst min = Math.min(r, g, b);\r\n\t\treturn (max + min) / 2;\r\n\t}\r\n\r\n\ttoHslObj() {\r\n\t\tconst r = this.rgbObj.r / 255;\r\n\t\tconst g = this.rgbObj.g / 255;\r\n\t\tconst b = this.rgbObj.b / 255;\r\n\r\n\t\tconst max = Math.max(r, g, b);\r\n\t\tconst min = Math.min(r, g, b);\r\n\t\tlet h, s, l = (max + min) / 2;\r\n\r\n\t\tif (max === min) {\r\n\t\t\th = s = 0; // achromatic\r\n\t\t} else {\r\n\t\t\tconst d = max - min;\r\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n\t\t\tswitch (max) {\r\n\t\t\t\tcase r:\r\n\t\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase g:\r\n\t\t\t\t\th = (b - r) / d + 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase b:\r\n\t\t\t\t\th = (r - g) / d + 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\th /= 6;\r\n\t\t}\r\n\r\n\t\treturn { h, s, l };\r\n\t}\r\n\r\n\tstatic fromHslObj(hslObj) {\r\n\t\tlet r, g, b;\r\n\t\tconst { h, s, l } = hslObj;\r\n\t\tif (s === 0) {\r\n\t\t\tr = g = b = l; // achromatic\r\n\t\t} else {\r\n\t\t\tconst hueToRgb = (p, q, t) => {\r\n\t\t\t\tif (t < 0) t += 1;\r\n\t\t\t\tif (t > 1) t -= 1;\r\n\t\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\t\t\t\tif (t < 1 / 2) return q;\r\n\t\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n\t\t\t\treturn p;\r\n\t\t\t};\r\n\r\n\t\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\t\tconst p = 2 * l - q;\r\n\r\n\t\t\tr = hueToRgb(p, q, h + 1 / 3);\r\n\t\t\tg = hueToRgb(p, q, h);\r\n\t\t\tb = hueToRgb(p, q, h - 1 / 3);\r\n\t\t}\r\n\r\n\t\treturn new DpitColorWithHslFeatures({\r\n\t\t\tr: Math.round(r * 255),\r\n\t\t\tg: Math.round(g * 255),\r\n\t\t\tb: Math.round(b * 255)\r\n\t\t});\r\n\t}\r\n\r\n\tsetLightness(lightnessVal) {\r\n\t\tconst hslObj = this.toHslObj();\r\n\t\thslObj.l = lightnessVal;\r\n\t\treturn DpitColorWithHslFeatures.fromHslObj(hslObj);\r\n\r\n\t}\r\n\r\n}\r\n","\r\nimport DpitColorWithHslFeatures from './DpitColorWithHslFeatures';\r\nimport DpitColor from './DpitColor';\r\nimport DpitColorAnalyze from './DpitColorAnalyze';\r\n\r\nexport default class AdminThemeColors {\r\n\tconstructor(config) {\r\n\t\tif (config.dpDebugEn) console.log('[dpit] INIT AdminThemeColors');\r\n\t\tif (config.adminColors?.colors?.legacy?.length >= 3) {\r\n\t\t\tconst legacyColors = config.adminColors.colors.legacy;\r\n\t\t\tconst adminColorsObj = [];\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tconst colorIdx = i + 1;\r\n\t\t\t\tif (legacyColors[i]) {\r\n\t\t\t\t\tconst adminColor = new DpitColorWithHslFeatures(legacyColors[i]);\r\n\t\t\t\t\tif (adminColor) {\r\n\t\t\t\t\t\tadminColor.setAsCssVariable(`--dpu-color-${colorIdx}`);\r\n\t\t\t\t\t\tadminColorsObj.push(adminColor);\r\n\t\t\t\t\t\tif (colorIdx === 1) {\r\n\t\t\t\t\t\t\tconst bgAccent = adminColor.setLightness(95);\r\n\t\t\t\t\t\t\tbgAccent.setAsCssVariable(`--dpu-color-${colorIdx}-light`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst textColor = DpitColorAnalyze.getContrastColor(legacyColors[i], true);\r\n\t\t\t\t\t\ttextColor.setAsCssVariable(`--dpu-color-${colorIdx}-text`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (config.adminColors.colors.actual) {\r\n\t\t\t\tObject.keys(config.adminColors.colors.actual).forEach(key => {\r\n\t\t\t\t\tconst adminColor = new DpitColorWithHslFeatures(config.adminColors.colors.actual[key]);\r\n\t\t\t\t\tif (adminColor) {\r\n\t\t\t\t\t\tadminColorsObj.push(adminColor);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (adminColorsObj && config.adminColors.addRgbVars) {\r\n\t\t\t\t['r', 'b', 'g'].forEach((rgbIdx) => {\r\n\t\t\t\t\tlet color = DpitColorAnalyze.getMostColor(adminColorsObj, rgbIdx);\r\n\t\t\t\t\tif (config.adminColors.rgbFeatureThresh && config.adminColors.rgbDefaults && config.adminColors.rgbDefaults[rgbIdx]) {\r\n\t\t\t\t\t\tconst feature = DpitColorAnalyze.getRgbHueFeature(rgbIdx, color);\r\n\t\t\t\t\t\t//console.log('Color: ', color, 'RGB:', rgbIdx, 'Feature:', feature);\r\n\t\t\t\t\t\tif (feature < config.adminColors.rgbFeatureThresh) {\r\n\t\t\t\t\t\t\t/*if (rgbIdx !== 'r') color = DpitColorAnalyze.getRgbHueAdjustedColor(rgbIdx, color);\r\n\t\t\t\t\t\t\t\telse color = Color(config.adminColors.rgbDefaults[rgbIdx]);*/\r\n\t\t\t\t\t\t\t//color = Color(config.adminColors.rgbDefaults[rgbIdx]);\r\n\t\t\t\t\t\t\tcolor = new DpitColor(config.adminColors.rgbDefaults[rgbIdx]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolor.setAsCssVariable(`--dpu-color-${rgbIdx}`);\r\n\t\t\t\t\tconst textColor = DpitColorAnalyze.getContrastColor(color);\r\n\t\t\t\t\ttextColor.setAsCssVariable(`--dpu-color-${rgbIdx}-text`);\r\n\t\t\t\t\tconst index = adminColorsObj.indexOf(color);\r\n\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\tadminColorsObj.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\r\n","export default class DpitColor {\r\n\tconstructor(src) {\r\n\r\n\t\tif (src == null) { // eslint-disable-line no-eq-null,eqeqeq\r\n\t\t\tthis.rgbObj = {\r\n\t\t\t\tr: 0,\r\n\t\t\t\tg: 0,\r\n\t\t\t\tb: 0\r\n\t\t\t};\r\n\t\t} else if (src instanceof DpitColor) {\r\n\t\t\tthis.rgbObj = { ...src.rgbObj };\r\n\t\t} else if (typeof src === 'string') {\r\n\t\t\tif (src.startsWith('#')) {\r\n\t\t\t\tthis.rgbObj = DpitColor.hexStringToRgbObj(src);\r\n\t\t\t} else {\r\n\t\t\t\tthis.rgbObj = DpitColor.rgbStringToRgbObj(src);\r\n\t\t\t\tif (!this.rgbObj) {\r\n\t\t\t\t\tthrow new Error('Argument \"src\" isn\\'t valid');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (src) {\r\n\t\t\tthis.rgbObj = { ...src };\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getRgbStringCommaSeparated(colorDefinition) {\r\n\t\tif (colorDefinition) {\r\n\t\t\ttry {\r\n\t\t\t\tconst colorObj = new DpitColor(colorDefinition);\r\n\t\t\t\treturn colorObj.toRgbStringCommaSeparated();\r\n\t\t\t}\r\n\t\t\tcatch {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic fromRgb(r, g, b) {\r\n\t\treturn new DpitColor({ r, g, b });\r\n\t}\r\n\r\n\tstatic rgbStringToRgbObj(rgbString) {\r\n\t\tconst regex = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\r\n\t\tconst match = rgbString.match(regex);\r\n\t\tif (match) {\r\n\t\t\tconst r = parseInt(match[1], 10);\r\n\t\t\tconst g = parseInt(match[2], 10);\r\n\t\t\tconst b = parseInt(match[3], 10);\r\n\t\t\treturn { r, g, b };\r\n\t\t}\r\n\t\treturn null; // Invalid RGB string format\r\n\t}\r\n\r\n\tstatic hexStringToRgbObj(hex) {\r\n\t\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n\t\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\t\thex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n\t\t\treturn r + r + g + g + b + b;\r\n\t\t});\r\n\r\n\t\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\t\treturn result ? {\r\n\t\t\tr: parseInt(result[1], 16),\r\n\t\t\tg: parseInt(result[2], 16),\r\n\t\t\tb: parseInt(result[3], 16)\r\n\t\t} : null;\r\n\t}\r\n\r\n\tcontrast(color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t}\r\n\r\n\tluminosity() {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar lum = {};\r\n\t\tObject.keys(this.rgbObj).forEach(key => {\r\n\t\t\tvar chan = this.rgbObj[key] / 255;\r\n\t\t\tlum[key] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t});\r\n\t\treturn 0.2126 * lum.r + 0.7152 * lum.g + 0.0722 * lum.b;\r\n\t}\r\n\r\n\tred() { return this.rgbObj.r; }\r\n\tgreen() { return this.rgbObj.g; }\r\n\tblue() { return this.rgbObj.b; }\r\n\tisDark() {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar yiq = (this.rgbObj.r * 299 + this.rgbObj.g * 587 + this.rgbObj.b * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t}\r\n\r\n\tisLight() {\r\n\t\treturn !this.isDark();\r\n\t}\r\n\r\n\tmix(colorToMixIn, weight) {\r\n\r\n\t\tif (!(colorToMixIn instanceof DpitColor) || !colorToMixIn.rgbObj) {\r\n\t\t\tthrow new Error('Argument \"mixinColor\" isn\\'t a DpitColor instance, but rather an instance of ' + typeof colorToMixIn);\r\n\t\t}\r\n\t\tvar color1 = colorToMixIn;\r\n\t\tvar color2 = this;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar w1 = (w + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn DpitColor.fromRgb(\r\n\t\t\tMath.max(Math.min(255, Math.round(w1 * color1.red() + w2 * color2.red())), 1),\r\n\t\t\tMath.max(Math.min(255, Math.round(w1 * color1.green() + w2 * color2.green())), 1),\r\n\t\t\tMath.max(Math.min(255, Math.round(w1 * color1.blue() + w2 * color2.blue())), 1)\r\n\t\t);\r\n\t}\r\n\r\n\ttoRgbStringCommaSeparated() {\r\n\t\treturn `${this.red()}, ${this.green()}, ${this.blue()}`;\r\n\t}\r\n\r\n\tsetAsCssVariable(varName, element = document.documentElement) {\r\n\t\telement.style.setProperty(varName, this.toRgbStringCommaSeparated());\r\n\t}\r\n\r\n}\r\n"],"sourceRoot":""}